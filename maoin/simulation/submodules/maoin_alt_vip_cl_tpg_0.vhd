-- maoin_alt_vip_cl_tpg_0.vhd

-- This file was auto-generated from alt_vip_cl_tpg_hw.tcl.  If you edit it your changes
-- will probably be lost.
-- 
-- Generated using ACDS version 18.1 646

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity maoin_alt_vip_cl_tpg_0 is
	generic (
		PIXELS_IN_PARALLEL : integer := 1
	);
	port (
		main_clock         : in  std_logic                     := '0'; -- main_clock.clk
		main_reset         : in  std_logic                     := '0'; -- main_reset.reset
		dout_data          : out std_logic_vector(29 downto 0);        --       dout.data
		dout_valid         : out std_logic;                            --           .valid
		dout_startofpacket : out std_logic;                            --           .startofpacket
		dout_endofpacket   : out std_logic;                            --           .endofpacket
		dout_ready         : in  std_logic                     := '0'  --           .ready
	);
end entity maoin_alt_vip_cl_tpg_0;

architecture rtl of maoin_alt_vip_cl_tpg_0 is
	component alt_vip_video_output_bridge is
		generic (
			BITS_PER_SYMBOL              : integer := 8;
			NUMBER_OF_COLOR_PLANES       : integer := 2;
			COLOR_PLANES_ARE_IN_PARALLEL : integer := 1;
			PIXELS_IN_PARALLEL           : integer := 1;
			VIDEO_PROTOCOL_NO            : integer := 1;
			READY_LATENCY_1              : integer := 1;
			SOP_PRE_ALIGNED              : integer := 0;
			MULTI_CONTEXT_SUPPORT        : integer := 0;
			TYPE_11_SUPPORT              : integer := 0;
			NO_CONCATENATION             : integer := 0;
			PIPELINE_READY               : integer := 0;
			SRC_WIDTH                    : integer := 8;
			DST_WIDTH                    : integer := 8;
			CONTEXT_WIDTH                : integer := 8;
			TASK_WIDTH                   : integer := 8;
			LOW_LATENCY_COMMAND_MODE     : integer := 0
		);
		port (
			clock                        : in  std_logic                     := 'X';             -- clk
			reset                        : in  std_logic                     := 'X';             -- reset
			av_st_cmd_valid              : in  std_logic                     := 'X';             -- valid
			av_st_cmd_startofpacket      : in  std_logic                     := 'X';             -- startofpacket
			av_st_cmd_endofpacket        : in  std_logic                     := 'X';             -- endofpacket
			av_st_cmd_data               : in  std_logic_vector(63 downto 0) := (others => 'X'); -- data
			av_st_cmd_ready              : out std_logic;                                        -- ready
			av_st_din_valid              : in  std_logic                     := 'X';             -- valid
			av_st_din_startofpacket      : in  std_logic                     := 'X';             -- startofpacket
			av_st_din_endofpacket        : in  std_logic                     := 'X';             -- endofpacket
			av_st_din_data               : in  std_logic_vector(61 downto 0) := (others => 'X'); -- data
			av_st_din_ready              : out std_logic;                                        -- ready
			av_st_vid_dout_data          : out std_logic_vector(29 downto 0);                    -- data
			av_st_vid_dout_valid         : out std_logic;                                        -- valid
			av_st_vid_dout_startofpacket : out std_logic;                                        -- startofpacket
			av_st_vid_dout_endofpacket   : out std_logic;                                        -- endofpacket
			av_st_vid_dout_ready         : in  std_logic                     := 'X'              -- ready
		);
	end component alt_vip_video_output_bridge;

	component maoin_alt_vip_cl_tpg_0_scheduler is
		port (
			clock                       : in  std_logic                     := 'X'; -- clk
			reset                       : in  std_logic                     := 'X'; -- reset
			av_st_cmd_ac_valid          : out std_logic;                            -- valid
			av_st_cmd_ac_startofpacket  : out std_logic;                            -- startofpacket
			av_st_cmd_ac_endofpacket    : out std_logic;                            -- endofpacket
			av_st_cmd_ac_data           : out std_logic_vector(63 downto 0);        -- data
			av_st_cmd_ac_ready          : in  std_logic                     := 'X'; -- ready
			av_st_cmd_vob_valid         : out std_logic;                            -- valid
			av_st_cmd_vob_startofpacket : out std_logic;                            -- startofpacket
			av_st_cmd_vob_endofpacket   : out std_logic;                            -- endofpacket
			av_st_cmd_vob_data          : out std_logic_vector(63 downto 0);        -- data
			av_st_cmd_vob_ready         : in  std_logic                     := 'X'  -- ready
		);
	end component maoin_alt_vip_cl_tpg_0_scheduler;

	component alt_vip_tpg_bars_alg_core is
		generic (
			BITS_PER_SYMBOL              : integer := 8;
			PIXELS_IN_PARALLEL           : integer := 1;
			NUMBER_OF_COLOR_PLANES       : integer := 2;
			COLOR_PLANES_ARE_IN_PARALLEL : integer := 1;
			TPG_CS                       : string  := "YCbCr_422";
			MAX_WIDTH                    : integer := 1920;
			MAX_HEIGHT                   : integer := 1080;
			PIPELINE_READY               : integer := 0;
			SRC_WIDTH                    : integer := 8;
			DST_WIDTH                    : integer := 8;
			CONTEXT_WIDTH                : integer := 8;
			TASK_WIDTH                   : integer := 8;
			SOURCE_ID                    : integer := 0;
			GREYSCALE                    : integer := 0;
			BW_ONLY                      : integer := 0
		);
		port (
			clock                    : in  std_logic                     := 'X';             -- clk
			reset                    : in  std_logic                     := 'X';             -- reset
			av_st_cmd_valid          : in  std_logic                     := 'X';             -- valid
			av_st_cmd_startofpacket  : in  std_logic                     := 'X';             -- startofpacket
			av_st_cmd_endofpacket    : in  std_logic                     := 'X';             -- endofpacket
			av_st_cmd_data           : in  std_logic_vector(63 downto 0) := (others => 'X'); -- data
			av_st_cmd_ready          : out std_logic;                                        -- ready
			av_st_dout_valid         : out std_logic;                                        -- valid
			av_st_dout_startofpacket : out std_logic;                                        -- startofpacket
			av_st_dout_endofpacket   : out std_logic;                                        -- endofpacket
			av_st_dout_data          : out std_logic_vector(61 downto 0);                    -- data
			av_st_dout_ready         : in  std_logic                     := 'X'              -- ready
		);
	end component alt_vip_tpg_bars_alg_core;

	signal scheduler_av_st_cmd_vob_valid         : std_logic;                     -- scheduler:av_st_cmd_vob_valid -> video_out:av_st_cmd_valid
	signal scheduler_av_st_cmd_vob_data          : std_logic_vector(63 downto 0); -- scheduler:av_st_cmd_vob_data -> video_out:av_st_cmd_data
	signal scheduler_av_st_cmd_vob_ready         : std_logic;                     -- video_out:av_st_cmd_ready -> scheduler:av_st_cmd_vob_ready
	signal scheduler_av_st_cmd_vob_startofpacket : std_logic;                     -- scheduler:av_st_cmd_vob_startofpacket -> video_out:av_st_cmd_startofpacket
	signal scheduler_av_st_cmd_vob_endofpacket   : std_logic;                     -- scheduler:av_st_cmd_vob_endofpacket -> video_out:av_st_cmd_endofpacket
	signal core_0_av_st_dout_valid               : std_logic;                     -- core_0:av_st_dout_valid -> video_out:av_st_din_valid
	signal core_0_av_st_dout_data                : std_logic_vector(61 downto 0); -- core_0:av_st_dout_data -> video_out:av_st_din_data
	signal core_0_av_st_dout_ready               : std_logic;                     -- video_out:av_st_din_ready -> core_0:av_st_dout_ready
	signal core_0_av_st_dout_startofpacket       : std_logic;                     -- core_0:av_st_dout_startofpacket -> video_out:av_st_din_startofpacket
	signal core_0_av_st_dout_endofpacket         : std_logic;                     -- core_0:av_st_dout_endofpacket -> video_out:av_st_din_endofpacket
	signal scheduler_av_st_cmd_ac_valid          : std_logic;                     -- scheduler:av_st_cmd_ac_valid -> core_0:av_st_cmd_valid
	signal scheduler_av_st_cmd_ac_data           : std_logic_vector(63 downto 0); -- scheduler:av_st_cmd_ac_data -> core_0:av_st_cmd_data
	signal scheduler_av_st_cmd_ac_ready          : std_logic;                     -- core_0:av_st_cmd_ready -> scheduler:av_st_cmd_ac_ready
	signal scheduler_av_st_cmd_ac_startofpacket  : std_logic;                     -- scheduler:av_st_cmd_ac_startofpacket -> core_0:av_st_cmd_startofpacket
	signal scheduler_av_st_cmd_ac_endofpacket    : std_logic;                     -- scheduler:av_st_cmd_ac_endofpacket -> core_0:av_st_cmd_endofpacket

begin

	pixels_in_parallel_check : if PIXELS_IN_PARALLEL /= 1 generate
		assert false report "Supplied generics do not match expected generics" severity Failure;
	end generate;

	video_out : component alt_vip_video_output_bridge
		generic map (
			BITS_PER_SYMBOL              => 10,
			NUMBER_OF_COLOR_PLANES       => 3,
			COLOR_PLANES_ARE_IN_PARALLEL => 1,
			PIXELS_IN_PARALLEL           => 1,
			VIDEO_PROTOCOL_NO            => 1,
			READY_LATENCY_1              => 1,
			SOP_PRE_ALIGNED              => 1,
			MULTI_CONTEXT_SUPPORT        => 0,
			TYPE_11_SUPPORT              => 0,
			NO_CONCATENATION             => 0,
			PIPELINE_READY               => 0,
			SRC_WIDTH                    => 8,
			DST_WIDTH                    => 8,
			CONTEXT_WIDTH                => 8,
			TASK_WIDTH                   => 8,
			LOW_LATENCY_COMMAND_MODE     => 0
		)
		port map (
			clock                        => main_clock,                            --     main_clock.clk
			reset                        => main_reset,                            --     main_reset.reset
			av_st_cmd_valid              => scheduler_av_st_cmd_vob_valid,         --      av_st_cmd.valid
			av_st_cmd_startofpacket      => scheduler_av_st_cmd_vob_startofpacket, --               .startofpacket
			av_st_cmd_endofpacket        => scheduler_av_st_cmd_vob_endofpacket,   --               .endofpacket
			av_st_cmd_data               => scheduler_av_st_cmd_vob_data,          --               .data
			av_st_cmd_ready              => scheduler_av_st_cmd_vob_ready,         --               .ready
			av_st_din_valid              => core_0_av_st_dout_valid,               --      av_st_din.valid
			av_st_din_startofpacket      => core_0_av_st_dout_startofpacket,       --               .startofpacket
			av_st_din_endofpacket        => core_0_av_st_dout_endofpacket,         --               .endofpacket
			av_st_din_data               => core_0_av_st_dout_data,                --               .data
			av_st_din_ready              => core_0_av_st_dout_ready,               --               .ready
			av_st_vid_dout_data          => dout_data,                             -- av_st_vid_dout.data
			av_st_vid_dout_valid         => dout_valid,                            --               .valid
			av_st_vid_dout_startofpacket => dout_startofpacket,                    --               .startofpacket
			av_st_vid_dout_endofpacket   => dout_endofpacket,                      --               .endofpacket
			av_st_vid_dout_ready         => dout_ready                             --               .ready
		);

	scheduler : component maoin_alt_vip_cl_tpg_0_scheduler
		port map (
			clock                       => main_clock,                            --    main_clock.clk
			reset                       => main_reset,                            --    main_reset.reset
			av_st_cmd_ac_valid          => scheduler_av_st_cmd_ac_valid,          --  av_st_cmd_ac.valid
			av_st_cmd_ac_startofpacket  => scheduler_av_st_cmd_ac_startofpacket,  --              .startofpacket
			av_st_cmd_ac_endofpacket    => scheduler_av_st_cmd_ac_endofpacket,    --              .endofpacket
			av_st_cmd_ac_data           => scheduler_av_st_cmd_ac_data,           --              .data
			av_st_cmd_ac_ready          => scheduler_av_st_cmd_ac_ready,          --              .ready
			av_st_cmd_vob_valid         => scheduler_av_st_cmd_vob_valid,         -- av_st_cmd_vob.valid
			av_st_cmd_vob_startofpacket => scheduler_av_st_cmd_vob_startofpacket, --              .startofpacket
			av_st_cmd_vob_endofpacket   => scheduler_av_st_cmd_vob_endofpacket,   --              .endofpacket
			av_st_cmd_vob_data          => scheduler_av_st_cmd_vob_data,          --              .data
			av_st_cmd_vob_ready         => scheduler_av_st_cmd_vob_ready          --              .ready
		);

	core_0 : component alt_vip_tpg_bars_alg_core
		generic map (
			BITS_PER_SYMBOL              => 10,
			PIXELS_IN_PARALLEL           => 1,
			NUMBER_OF_COLOR_PLANES       => 3,
			COLOR_PLANES_ARE_IN_PARALLEL => 1,
			TPG_CS                       => "RGB_444",
			MAX_WIDTH                    => 640,
			MAX_HEIGHT                   => 480,
			PIPELINE_READY               => 0,
			SRC_WIDTH                    => 8,
			DST_WIDTH                    => 8,
			CONTEXT_WIDTH                => 8,
			TASK_WIDTH                   => 8,
			SOURCE_ID                    => 0,
			GREYSCALE                    => 0,
			BW_ONLY                      => 0
		)
		port map (
			clock                    => main_clock,                           -- main_clock.clk
			reset                    => main_reset,                           -- main_reset.reset
			av_st_cmd_valid          => scheduler_av_st_cmd_ac_valid,         --  av_st_cmd.valid
			av_st_cmd_startofpacket  => scheduler_av_st_cmd_ac_startofpacket, --           .startofpacket
			av_st_cmd_endofpacket    => scheduler_av_st_cmd_ac_endofpacket,   --           .endofpacket
			av_st_cmd_data           => scheduler_av_st_cmd_ac_data,          --           .data
			av_st_cmd_ready          => scheduler_av_st_cmd_ac_ready,         --           .ready
			av_st_dout_valid         => core_0_av_st_dout_valid,              -- av_st_dout.valid
			av_st_dout_startofpacket => core_0_av_st_dout_startofpacket,      --           .startofpacket
			av_st_dout_endofpacket   => core_0_av_st_dout_endofpacket,        --           .endofpacket
			av_st_dout_data          => core_0_av_st_dout_data,               --           .data
			av_st_dout_ready         => core_0_av_st_dout_ready               --           .ready
		);

end architecture rtl; -- of maoin_alt_vip_cl_tpg_0
